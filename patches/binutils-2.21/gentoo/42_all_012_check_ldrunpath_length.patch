Subject: Only generate an RPATH if LD_RUN_PATH is not empty

This is http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=151024.

FIXME: Is this patch still necessary?

---

#!/bin/sh -e
## 012_check_ldrunpath_length.dpatch by Chris Chimelis <chris@debian.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Only generate an RPATH entry if LD_RUN_PATH is not empty, for
## DP: cases where -rpath isn't specified. (#151024)

if [ $# -ne 1 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi

[ -f debian/patches/00patch-opts ] && . debian/patches/00patch-opts
patch_opts="${patch_opts:--f --no-backup-if-mismatch}"

case "$1" in
       -patch) patch $patch_opts -p1 < $0;;
       -unpatch) patch $patch_opts -p1 -R < $0;;
        *)
                echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
                exit 1;;
esac

exit 0

@DPATCH@

---
 ld/emultempl/elf32.em |    4 ++++
 1 file changed, 4 insertions(+)

Index: binutils-2.21/ld/emultempl/elf32.em
===================================================================
--- binutils-2.21.orig/ld/emultempl/elf32.em
+++ binutils-2.21/ld/emultempl/elf32.em
@@ -1270,6 +1270,8 @@ fragment <<EOF
 	      && command_line.rpath == NULL)
 	    {
 	      lib_path = (const char *) getenv ("LD_RUN_PATH");
+	      if ((lib_path) && (strlen (lib_path) == 0))
+		  lib_path = NULL;
 	      if (gld${EMULATION_NAME}_search_needed (lib_path, &n,
 						      force))
 		break;
@@ -1497,6 +1499,8 @@ gld${EMULATION_NAME}_before_allocation (
   rpath = command_line.rpath;
   if (rpath == NULL)
     rpath = (const char *) getenv ("LD_RUN_PATH");
+  if ((rpath) && (strlen (rpath) == 0))
+    rpath = NULL;
 
   for (abfd = link_info.input_bfds; abfd; abfd = abfd->link_next)
     if (bfd_get_flavour (abfd) == bfd_target_elf_flavour)
